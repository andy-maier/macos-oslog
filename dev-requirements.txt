# Pip requirements file for development.
#
# The order of packages is significant, because pip processes them in the order
# of appearance.
#
# Make sure that the minimum versions required in this file are consistent with
# the minimum versions specified in minimum-constraints.txt.

-r requirements.txt


# Indirect dependencies that must be handled early:

# tox and flake8 have requirements on importlib-metadata
importlib-metadata>=1.1.0,<4.3; python_version <= '3.7'


# Direct dependencies:

# PEP517 package builder, used in Makefile
build>=0.5.0

# virtualenv
# tox 3.21.0 requires virtualenv!=20.0.[0-7],>=16.0.0 and requires py>=3.5
# build requires virtualenv.cli_run which was added in 20.1
# virtualenv 20.0 requires six<2,>=1.12.0
virtualenv>=20.1.0

# Unit test direct dependencies (e.g. imports into testcases):

# pytest
# pytest 4.3.1 solves an issue on Python 3 with minimum package levels
pytest>=4.3.1,!=6.0; python_version >= '3.5' and python_version <= '3.6'
pytest>=4.4.0,!=6.0; python_version >= '3.7' and python_version <= '3.9'
pytest>=6.2.5; python_version >= '3.10'
testfixtures>=6.9.0
decorator>=4.0.11
mock>=2.0.0
yagot>=0.5.0
# pytz before 2019.1 fails on Python 3.10 because it uses collections.Mapping
pytz>=2016.10; python_version <= '3.9'
pytz>=2019.1; python_version >= '3.10'

# Coverage reporting (no imports, invoked via coveralls script):
coverage>=5.0
pytest-cov>=2.7.0
# TODO: Remove coveralls pinning to <3.0.0 once fixed (TheKevJames/coveralls-python#252)
coveralls>=2.1.2,<3.0.0

# Safety CI by pyup.io
safety>=1.9.0
dparse>=0.5.1

# PyYAML is pulled in by dparse and python-coveralls
# PyYAML 5.3.1 addressed issue 38100 reported by safety
# PyYAML 5.2 addressed issue 38639 reported by safety
PyYAML>=5.3.1

# Tox
# tox 3.17 requires six>=1.14.0 - covered in test-requirements.txt
# tox 3.14 requires importlib-metadata<1,>=0.12 on py<3.8
# tox 3.21 requires importlib-metadata>=0.12 on py<3.8
tox>=3.21.0

# Sphinx (no imports, invoked via sphinx-build script):
# Keep in sync with rtd-requirements.txt

# Sphinx 4.0.0 breaks autodocsumm and needs to be excluded
# Sphinx <4.2.0 fails on Python 3.10 because it tries to import non-existing
#   types.Union. This also drives docutils>=0.14.
# Sphinx pins docutils to <0.18 (some versions even to <0.17) but the package
#   version resolver in the pip version used on py27 ignores package dependencies
Sphinx>=3.5.4,!=4.0.0; python_version >= '3.5' and python_version <= '3.9'
Sphinx>=4.2.0; python_version >= '3.10'
docutils>=0.13.1; python_version >= '3.5' and python_version <= '3.9'
docutils>=0.14; python_version >= '3.10'
sphinx-git>=10.1.1
GitPython>=2.1.1
sphinxcontrib-fulltoc>=1.2.0
sphinxcontrib-websupport>=1.1.2
Pygments>=2.5.1; python_version >= '3.5'
sphinx-rtd-theme>=0.5.0
# autodocsumm before 0.2.5 fails on Python 3.10 with TypeError
autodocsumm>=0.1.13; python_version >= '3.5' and python_version <= '3.9'
autodocsumm>=0.2.5; python_version >= '3.10'
# Babel 2.7.0 fixes an ImportError for MutableMapping which starts failing on Python 3.10
Babel>=2.7.0

# PyLint (no imports, invoked via pylint script)
# Pylint requires astroid
# Pylint 1.x / astroid 1.x supports py27 and py34/35/36
# Pylint 2.0 / astroid 2.0 removed py27, added py37
# Pylint 2.4 / astroid 2.3 removed py34
# Workaround: lazy-object-proxy fails installing on macos/py35/minimum, because it uses
#   setuptools-scm for its setup and (up to 1.5.2) does not correctly pin setuptools-scm.
#   Not clear why this does not happen on ubuntu/windows with py35 or on py34.
#   See issue https://github.com/ionelmc/python-lazy-object-proxy/issues/51.
#   Working around this by not installing pylint/astroid on py35.
#   TODO: If lazy-object-proxy releases a correctly pinned 1.4.x version, this workaround
#         can be removed again.
pylint>=2.4.4; python_version >= '3.6'
astroid>=2.3.3; python_version >= '3.6'
# typed-ast is used by astroid on py34..py37
typed-ast>=1.4.0,<1.5.0; python_version >= '3.6' and python_version < '3.8' and implementation_name=='cpython'
# Workaround: lazy-object-proxy is used by astroid, and lazy-object-proxy 1.5.0
#   dropped support for py34 but declared it as supported
lazy-object-proxy>=1.4.3; python_version >= '3.6'

# Flake8 and dependents (no imports, invoked via flake8 script):
# flake8 3.9.0 has removed support for py34 and pip 19.1.1 on py34 does not deal
# well with its pinned dependencies, so we need to repeat these for py34.
# flake8 4.0.0 fixes an AttributeError on Python 3.10.
# flake8 5.0.4 requires importlib-metadata>=1.1.0,<4.3 on py<3.8
flake8>=3.8.0; python_version >= '3.5' and python_version <= '3.9'
flake8>=4.0.0; python_version >= '3.10'
mccabe>=0.6.0; python_version >= '3.5'
pycodestyle>=2.6.0; python_version >= '3.5' and python_version <= '3.9'
pycodestyle>=2.8.0; python_version >= '3.10'
pyflakes>=2.2.0; python_version >= '3.5' and python_version <= '3.9'
pyflakes>=2.4.0; python_version >= '3.10'
entrypoints>=0.3.0

# Twine (no imports, invoked via twine script):
# twine 2.0.0 removed support for Python < 3.6
twine>=1.8.1,<2.0.0; python_version == '3.5'
twine>=3.0.0; python_version >= '3.6'
# readme-renderer 23.0 has made cmarkgfm part of extras (it fails on Cygwin)
# readme-renderer 25.0 or higher is needed to address issue on Windows with py39
readme-renderer>=25.0

# Performance profiling tools
pyinstrument>=3.0.1

# Package dependency management tools (not used by any make rules)
pipdeptree>=2.0.0
# pip-check-reqs 2.3.2 solves issues with newer pip versions
pip-check-reqs>=2.3.2


# Indirect dependencies with special constraints:

# pytz (used by TBD)
pytz>=2016.10

# colorama (used by tox, pytest)
colorama>=0.4.1

# packaging (used by pytest)
packaging>=19.0

# pluggy (used by pytest, tox)
# Pluggy 0.12.0 has a bug causing pytest plugins to fail loading on py38
# pytest 4.3.1 depends on pluggy>=0.7
# tox 3.21.0 depends on pluggy>=0.12.0
pluggy>=0.13.1

# six (used by virtualenv, tox, probably others)
# virtualenv 20.0 requires six>=1.12.0 on py>=3.8
# tox 3.17 requires six>=1.14.0
# six 1.16.0 removes the ImportWarning raised by Python 3.10
six>=1.14.0; python_version <= '3.9'
six>=1.16.0; python_version >= '3.10'

# FormEncode is used for xml comparisons in unit test
# FormEncode 1.3.1 has no python_requires and fails install on Python 3.10 due to incorrect version checking
FormEncode>=1.3.1; python_version <= '3.9'
FormEncode>=2.0.0; python_version >= '3.10'

# Additional indirect dependencies are not specified in this file.
